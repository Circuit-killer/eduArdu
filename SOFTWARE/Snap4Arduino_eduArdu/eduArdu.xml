<blocks app="Snap4Arduino 1.2.7
, http://snap4arduino.rocks" version="1"><block-definition s="min of %&apos;num&apos; and %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>num</l><l>num2</l></list><l>return Math.min(num, num2)</l></block><list><block var="num"/><block var="num2"/></list></block></block></script></block-definition><block-definition s="ultrasound distance reading" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>var myself = this;&#xD;this.arduino.ultrasoundValue = null;&#xD;this.arduino.board.once(&apos;string&apos;, function(data){ myself.arduino.ultrasoundValue = parseFloat(data) });&#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x0B, 0xF7]));</l></block><list></list></block><block s="doWaitUntil"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return (this.arduino.ultrasoundValue != null)</l></block><list></list></block></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.arduino.ultrasoundValue</l></block><list></list></block></block></script></block-definition><block-definition s="S" type="reporter" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><l></l></block></script></block-definition><block-definition s="touched %&apos;TEST&apos;" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n" readonly="true"><options>D9=9
D10=10
D13=13
D14=14
D15=15
D16=16</options></input></inputs><script><block s="doReport"><block s="reportNot"><block s="reportDigitalReading"><block var="TEST"/></block></block></block></script></block-definition><block-definition s="Light Sensor in %" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportRound"><block s="reportProduct"><block s="reportAnalogReading"><l>2</l></block><block s="reportQuotient"><l>100</l><l>1023</l></block></block></block></block></script></block-definition><block-definition s="Joystick X" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportRound"><block s="reportProduct"><block s="reportAnalogReading"><l>0</l></block><block s="reportQuotient"><l>100</l><l>1023</l></block></block></block></block></script></block-definition><block-definition s="Jostick Y" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportRound"><block s="reportProduct"><block s="reportAnalogReading"><l>1</l></block><block s="reportQuotient"><l>100</l><l>1023</l></block></block></block></block></script></block-definition><block-definition s="label %&apos;text&apos; of size %&apos;size&apos;" type="command" category="pen"><comment x="0" y="0" w="90" collapsed="false">LABEL will stamp text on the stage at the given font size. The direction of the text is the direction the sprite is facing, and color will match the pen color.</comment><header></header><code></code><translations>de:drucke _ in Größe _&#xD;ca:etiqueta _ de mida _&#xD;es:etiqueta _ de tamaño _&#xD;fr:étiquette _ d&apos;une taille de _&#xD;</translations><inputs><input type="%txt">Hello!</input><input type="%n">12</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l><l>size</l></list><l>var stage = this.parentThatIsA(StageMorph),&#xD;    context = stage.penTrails().getContext(&apos;2d&apos;),&#xD;    rotation = radians(this.direction() - 90),&#xD;    trans = new Point(&#xD;      this.center().x - stage.left(),&#xD;      this.center().y - stage.top()&#xD;    ),&#xD;    isWarped = this.Warped,&#xD;    len,&#xD;    pos;&#xD;&#xD;if (isWarped) {endWarp(); }&#xD;context.save();&#xD;context.font = size + &apos;px monospace&apos;;&#xD;context.textAlign = &apos;left&apos;;&#xD;context.textBaseline = &apos;alphabetic&apos;;&#xD;context.fillStyle = this.color.toString();&#xD;len = context.measureText(text).width;&#xD;trans = trans.multiplyBy(1 / stage.scale);&#xD;context.translate(trans.x, trans.y);&#xD;context.rotate(rotation);&#xD;context.fillText(text, 0, 0);&#xD;context.translate(-trans.x, -trans.y);&#xD;context.restore();&#xD;pos = new Point(&#xD;  len * Math.sin(radians(this.direction())),&#xD;  len * Math.cos(radians(this.direction())));&#xD;pos = pos.add(new Point(this.xPosition(), this.yPosition()));&#xD;this.gotoXY(pos.x, pos.y, false);&#xD;this.changed();&#xD;if (isWarped) {this.startWarp(); }&#xD;stage.changed();</l></block><list><block var="text"/><block var="size"/></list></block></script></block-definition><block-definition s="empty? %&apos;data&apos;" type="predicate" category="lists"><header></header><code></code><translations>de:ist _ leer?&#xD;ca:_ buida?&#xD;es:_ vacía?&#xD;fr:_ vide?&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportEquals"><block var="data"/><block s="reportNewList"><list></list></block></block></block></script></block-definition><block-definition s="keep items such that %&apos;pred&apos; from %&apos;data&apos;" type="reporter" category="lists"><header></header><code></code><translations>de:behalte Elemente, die _ aus _&#xD;ca:manté els elements on _ de _&#xD;es:mantener los elementos donde _ de _&#xD;fr:garder les items tels que _ de _&#xD;</translations><inputs><input type="%predRing"></input><input type="%l"></input></inputs><script><block s="doIf"><custom-block s="empty? %l"><block var="data"/></custom-block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doIfElse"><block s="evaluate"><block var="pred"/><list><block s="reportListItem"><l>1</l><block var="data"/></block></list></block><script><block s="doReport"><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="data"/></block><custom-block s="keep items such that %predRing from %l"><block var="pred"/><block s="reportCDR"><block var="data"/></block></custom-block></block></block></script><script><block s="doReport"><custom-block s="keep items such that %predRing from %l"><block var="pred"/><block s="reportCDR"><block var="data"/></block></custom-block></block></script></block></script></block-definition><block-definition s="combine with %&apos;function&apos; items of %&apos;data&apos;" type="reporter" category="lists"><header></header><code></code><translations>de:kombiniere mit _ die Elemente von _&#xD;ca:combina amb _ els elements de _&#xD;es:combinar con _ los elementos de _&#xD;fr:combine avec _ les items de _&#xD;</translations><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><block s="doIf"><custom-block s="empty? %l"><block s="reportCDR"><block var="data"/></block></custom-block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="data"/></block></block></script></block><block s="doReport"><block s="evaluate"><block var="function"/><list><block s="reportListItem"><l>1</l><block var="data"/></block><custom-block s="combine with %repRing items of %l"><block var="function"/><block s="reportCDR"><block var="data"/></block></custom-block></list></block></block></script></block-definition><block-definition s="if %&apos;test&apos; then %&apos;true&apos; else %&apos;false&apos;" type="reporter" category="control"><header></header><code></code><translations>de:wenn _ dann _ sonst _&#xD;ca:si _ llavors _ si no _&#xD;es:si _ entonces _ sino _&#xD;fr:si _ alors _ sinon _&#xD;</translations><inputs><input type="%b"></input><input type="%anyUE"></input><input type="%anyUE"></input></inputs><script><block s="doIfElse"><block var="test"/><script><block s="doReport"><block s="evaluate"><block var="true"/><list></list></block></block></script><script><block s="doReport"><block s="evaluate"><block var="false"/><list></list></block></block></script></block></script></block-definition><block-definition s="for %&apos;i&apos; = %&apos;start&apos; to %&apos;end&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations>de:für _ = _ bis _ _&#xD;ca:per _ = _ fins _ _&#xD;es:para _ = _ hasta _ _&#xD;fr:pour _ allant de _ à _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%n">1</input><input type="%n">10</input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>step</l><l>tester</l></list></block><block s="doIfElse"><block s="reportGreaterThan"><block var="start"/><block var="end"/></block><script><block s="doSetVar"><l>step</l><l>-1</l></block><block s="doSetVar"><l>tester</l><block s="reifyReporter"><autolambda><block s="reportLessThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script><script><block s="doSetVar"><l>step</l><l>1</l></block><block s="doSetVar"><l>tester</l><block s="reifyReporter"><autolambda><block s="reportGreaterThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script></block><block s="doSetVar"><l>i</l><block var="start"/></block><block s="doUntil"><block s="evaluate"><block var="tester"/><list></list></block><script><block s="doRun"><block var="action"/><list></list></block><block s="doChangeVar"><l>i</l><block var="step"/></block></script></block></script></block-definition><block-definition s="join words %&apos;words&apos;" type="reporter" category="operators"><header></header><code></code><translations>de:füge Wörter zusammen _&#xD;ca:uneix les paraules _&#xD;es:unir las palabras _&#xD;fr:fusionne les mots _&#xD;</translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doIf"><custom-block s="empty? %l"><block s="reportCDR"><block var="words"/></block></custom-block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="words"/></block></block></script></block><block s="doIf"><block s="reportEquals"><l></l><block s="reportListItem"><l>1</l><block var="words"/></block></block><script><block s="doReport"><custom-block s="join words %mult%txt"><block s="reportCDR"><block var="words"/></block></custom-block></block></script></block><block s="doIf"><block s="reportEquals"><l></l><block s="reportListItem"><l>2</l><block var="words"/></block></block><script><block s="doReport"><custom-block s="join words %mult%txt"><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="words"/></block><block s="reportCDR"><block s="reportCDR"><block var="words"/></block></block></block></custom-block></block></script></block><block s="doReport"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="words"/></block><l> </l><custom-block s="join words %mult%txt"><block s="reportCDR"><block var="words"/></block></custom-block></list></block></block></script></block-definition><block-definition s="list $arrowRight sentence %&apos;data&apos;" type="reporter" category="operators"><header></header><code></code><translations>de:Liste $arrowRight Satz _&#xD;ca:llista $arrowRight frase _&#xD;es:lista $arrowRight frase _&#xD;fr:liste $arrowRight phrase _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="join words %mult%txt"><block var="data"/></custom-block></block></script></block-definition><block-definition s="sentence $arrowRight list %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations>de:Satz $arrowRight Liste _&#xD;ca:frase $arrowRight llista _&#xD;es:frase $arrowRight lista _&#xD;fr:phrase $arrowRight liste _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doReport"><block s="reportTextSplit"><block var="text"/><l><option>whitespace</option></l></block></block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations>de:fange _ _&#xD;ca:agafa _ _&#xD;es:atrapar _ _&#xD;fr:attrape _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doRun"><block var="action"/><list></list></block></script><list><l>cont</l></list></block></block><custom-block s="ignore %s"><l>3</l></custom-block></script></block-definition><block-definition s="throw %&apos;cont&apos;" type="command" category="control"><header></header><code></code><translations>de:wirf _&#xD;ca:llança _&#xD;es:lanzar _&#xD;fr:lance _&#xD;</translations><inputs><input type="%s">catchtag</input></inputs><script><block s="doRun"><block var="cont"/><list></list></block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;value&apos;" type="reporter" category="control"><header></header><code></code><translations>de:fange _ _&#xD;ca:agafa _ _&#xD;es:atrapar _ _&#xD;fr:attrape _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%anyUE"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doReport"><block s="evaluate"><block var="value"/><list></list></block></block></script><list><l>cont</l></list></block></block></script></block-definition><block-definition s="throw %&apos;tag&apos; %&apos;value&apos;" type="command" category="control"><header></header><code></code><translations>de:wirf _ _&#xD;ca:llança _ _&#xD;es:lanzar _ _&#xD;fr:lance _ _&#xD;</translations><inputs><input type="%s">catchtag</input><input type="%s"></input></inputs><script><block s="doRun"><block var="tag"/><list><block var="value"/></list></block></script></block-definition><block-definition s="for each %&apos;item&apos; of %&apos;data&apos; %&apos;action&apos;" type="command" category="lists"><header></header><code></code><translations>de:für jedes _ von _ _&#xD;ca:per cada _ de _ _&#xD;es:para cada _ de _ _&#xD;fr:pour chaque _ de _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%l"></input><input type="%cs"></input></inputs><script><block s="doUntil"><custom-block s="empty? %l"><block var="data"/></custom-block><script><block s="doSetVar"><l>item</l><block s="reportListItem"><l>1</l><block var="data"/></block></block><block s="doRun"><block var="action"/><list><block s="reportListItem"><l>1</l><block var="data"/></block></list></block><block s="doSetVar"><l>data</l><block s="reportCDR"><block var="data"/></block></block></script></block></script></block-definition><block-definition s="if %&apos;test&apos; do %&apos;action&apos; and pause all $pause-1-255-220-0" type="command" category="control"><header></header><code></code><translations>de:falls _ dann _ und pause $pause-1-255-220-0&#xD;ca:si _ fes _ i atura-ho tot $pause-1-255-220-0&#xD;es:si _ haz _ y páralo todo $pause-1-255-220-0&#xD;fr:si _ faire _ et mettre tout en pause $pause-1-255-220-0&#xD;</translations><inputs><input type="%boolUE"></input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>breakpoint</l></list></block><block s="doIf"><block s="evaluate"><block var="test"/><list></list></block><script><block s="doSetVar"><l>breakpoint</l><block var="test"/></block><block s="doShowVar"><l>breakpoint</l></block><block s="doRun"><block var="action"/><list></list></block><block s="doPauseAll"></block><block s="doHideVar"><l></l></block></script></block></script></block-definition><block-definition s="word $arrowRight list %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations>de:Wort $arrowRight Liste _&#xD;ca:paraula $arrowRight llista _&#xD;es:palabra $arrowRight lista _&#xD;fr:mot $arrowRight liste _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doReport"><block s="reportTextSplit"><block var="word"/><l><option>letter</option></l></block></block></script></block-definition><block-definition s="ignore %&apos;x&apos;" type="command" category="control"><header></header><code></code><translations>de:ignoriere _&#xD;ca:ignora _&#xD;es:ignorar _&#xD;fr:ignore _&#xD;</translations><inputs><input type="%s"></input></inputs></block-definition><block-definition s="list $arrowRight word %&apos;list&apos;" type="reporter" category="operators"><header></header><code></code><translations>de:Liste $arrowRight Wort _&#xD;ca:llista $arrowRight paraula _&#xD;es:lista $arrowRight palabra _&#xD;fr:liste $arrowRight mot _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportJoinWords"><block var="list"/></block></block></script></block-definition><block-definition s="%&apos;x&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block var="x"/></block></script></block-definition><block-definition s="numbers from %&apos;from&apos; to %&apos;to&apos;" type="reporter" category="lists"><header></header><code></code><translations>de:Zahlen von _ bis _&#xD;ca:nombres des de _ a _&#xD;es:números de _ a _&#xD;fr:nombres de _ à _&#xD;</translations><inputs><input type="%n">1</input><input type="%n">10</input></inputs><script><block s="doIf"><block s="reportGreaterThan"><block var="from"/><block var="to"/></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doReport"><block s="reportCONS"><block var="from"/><custom-block s="numbers from %n to %n"><block s="reportSum"><block var="from"/><l>1</l></block><block var="to"/></custom-block></block></block></script></block-definition><block-definition s="map %&apos;func&apos; over %&apos;data&apos;" type="reporter" category="lists"><header></header><code></code><translations>de:wende _ an auf _&#xD;ca:mapeja _ sobre _&#xD;es:mapear _ sobre _&#xD;fr:appliquer _ à _&#xD;</translations><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><block s="doIf"><custom-block s="empty? %l"><block var="data"/></custom-block><script><block s="doReport"><block var="data"/></block></script></block><block s="doReport"><block s="reportCONS"><block s="evaluate"><block var="func"/><list><block s="reportListItem"><l>1</l><block var="data"/></block></list></block><custom-block s="map %repRing over %l"><block var="func"/><block s="reportCDR"><block var="data"/></block></custom-block></block></block></script></block-definition><block-definition s="tone on pin %&apos;pin&apos; of frequency %&apos;frequency&apos; duration %&apos;duration&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l><l>frequency</l><l>duration</l></list><l>var freqStr = frequency.toString();&#xD;var array = [0xF0, 0x08, pin];&#xD;for (i = 0; i &lt; freqStr.length; i++){&#xD;	array.push(freqStr.charCodeAt(i));&#xD;}&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));&#xD;var cur_d = new Date();&#xD;var cur_ticks = cur_d.getTime();&#xD;var ms_passed = 0;&#xD;while(ms_passed &lt; duration) {&#xD;  var d = new Date();  // Possible memory leak?&#xD;  var ticks = d.getTime();&#xD;  ms_passed = ticks - cur_ticks;&#xD;  // d = null;  // Prevent memory leak?&#xD;}&#xD; &#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x09, pin, 0xF7]));</l></block><list><block var="pin"/><block var="frequency"/><block var="duration"/></list></block></script></block-definition><block-definition s="tone on pin %&apos;pin&apos; of frequency %&apos;frequency&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l><l>frequency</l></list><l>var freqStr = frequency.toString();&#xD;var array = [0xF0, 0x08, pin];&#xD;for (i = 0; i &lt; freqStr.length; i++){&#xD;	array.push(freqStr.charCodeAt(i));&#xD;}&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));</l></block><list><block var="pin"/><block var="frequency"/></list></block></script></block-definition><block-definition s="stop tone on pin %&apos;pin&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x09, pin, 0xF7]));</l></block><list><block var="pin"/></list></block></script></block-definition><block-definition s="connect arduino %&apos;type&apos; at %&apos;port&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt">ArduinoUNO<options>Mini=ArduinoMini
Pro w/ atmega168=ArduinoPro
Mega=ArduinoMega
Ng or older w/ atmega8=ArduinoATmega8
Uno=ArduinoUNO
Lilypad w/ atmega328=ArduinoLilyPad328
Lilypad w/ atmega168=ArduinoLilyPad
Ng or older w/ atmega168=ArduinoATmega168
Pro w/ atmega328=ArduinoPro328
Diecimila w/ atmega168=ArduinoDiecimila
Mega 2560=ArduinoMega2560
Bluetooth=ArduinoBT
Duemilanove w/ atmega328=ArduinoATmega328</options></input><input type="%s">/dev/ttyACM0</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block s="reportURL"><block s="reportJoinWords"><list><l>localhost:8080/connect?port=</l><block var="port"/><l>&amp;type=</l><block var="type"/></list></block></block><l>OK</l></block><script><block s="errorObsolete"></block></script><script><block s="doReport"><l>error!</l></block></script></block></script></block-definition><block-definition s="set digital pin %&apos;pin&apos; to %&apos;boolean&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%b"></input></inputs><script><block s="doDeclareVariables"><list><l>bool</l></list></block><block s="doIfElse"><block var="boolean"/><script><block s="doSetVar"><l>bool</l><l>1</l></block></script><script><block s="doSetVar"><l>bool</l><l>0</l></block></script></block><block s="errorObsolete"></block></script></block-definition><block-definition s="set servo %&apos;pin&apos; to %&apos;value&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%txt">clockwise<options>clockwise
counter-clockwise
stopped</options></input></inputs><script><block s="doDeclareVariables"><list><l>servoValue</l></list></block><block s="doIf"><block s="reportEquals"><block var="value"/><l>clockwise</l></block><script><block s="doSetVar"><l>servoValue</l><l>1200</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="value"/><l>counter-clockwise</l></block><script><block s="doSetVar"><l>servoValue</l><l>1700</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="value"/><l>stopped</l></block><script><block s="doSetVar"><l>servoValue</l><l>1500</l></block></script></block><block s="errorObsolete"></block></script></block-definition><block-definition s="setup digital pin %&apos;pin&apos; as %&apos;pin mode&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%txt">digital input&#xD;<options>digital input
digital output
PWM
servo</options></input></inputs><script><block s="doDeclareVariables"><list><l>pinModeChar</l></list></block><block s="doIf"><block s="reportEquals"><block var="pin mode"/><l>digital input</l></block><script><block s="doSetVar"><l>pinModeChar</l><l>I</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="pin mode"/><l>digital output</l></block><script><block s="doSetVar"><l>pinModeChar</l><l>O</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="pin mode"/><l>servo</l></block><script><block s="doSetVar"><l>pinModeChar</l><l>S</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="pin mode"/><l>PWM</l></block><script><block s="doSetVar"><l>pinModeChar</l><l>S</l></block></script></block><block s="doReport"><block s="reportURL"><block s="reportJoinWords"><list><l>localhost:8080/digitalPinMode?pin=</l><block var="pin"/><l>&amp;mode=</l><block var="pinModeChar"/></list></block></block></block></script></block-definition><block-definition s="play_music Tones List: %&apos;tones_ls&apos; Timing List %&apos;timing_ls&apos; Tempo: %&apos;tempo&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%n"></input></inputs><script><block s="doDeclareVariables"><list><l>notes_ls</l><l>notes_freq</l><l>duration_ls</l><l>duration_times</l><l>output_freq</l><l>output_time</l></list></block><block s="doSetVar"><l>notes_ls</l><custom-block s="sentence $arrowRight list %txt"><l>C3 C3# D3 D3# E3 F3 F3# G3 G3# A3 A3# B3 C4 C4# D4 D4# E4 F4 F4# G4 G4# A4 A4# B4 C5 C5# D5 D5# E5 F5 F5# G5 G5# A5 A5# B5 C6 C6# D6 D6# E6 F6 F6# G6 G6# A6 A6# B6 C7 C7# D7 D7# E7 F7 F7# G7 G7# A7 A7# B7 C8 C8# D8 D8# E8 F8 F8# G8 G8# A8 A8# B8</l></custom-block></block><block s="doSetVar"><l>notes_freq</l><custom-block s="sentence $arrowRight list %txt"><l>131 139 148 156 165 175 185 196 208 220 233 247 262 277 294 311 330 349 370 392 415 440 466 494 523 554 587 622 659 699 740 784 831 880 932 988 1047 1109 1175 1245 1319 1397 1480 1568 1661 1760 1865 1976 2093 2217 2349 2489 2637 2794 2960 3136 3322 3520 3729 3951 4186 4435 4699 4978 5274 5588 5920 6272 6645 7040 7459 7902</l></custom-block></block><block s="doSetVar"><l>duration_ls</l><block s="reportNewList"><list><l>Q</l><l>QD</l><l>E</l><l>ED</l><l>S</l><l>SD</l><l>H</l><l>HD</l><l>W</l></list></block></block><block s="doDeclareVariables"><list><l>q_note</l><l>qd_note</l><l>e_note</l><l>ed_note</l><l>s_note</l><l>sd_note</l><l>h_note</l><l>hd_note</l><l>w_note</l></list></block><block s="doSetVar"><l>q_note</l><block s="reportProduct"><l>1000</l><block s="reportQuotient"><l>60</l><block var="tempo"/></block></block></block><block s="doSetVar"><l>qd_note</l><block s="reportSum"><block var="q_note"/><block s="reportQuotient"><block var="q_note"/><l>2</l></block></block></block><block s="doSetVar"><l>e_note</l><block s="reportQuotient"><block var="q_note"/><l>2</l></block></block><block s="doSetVar"><l>ed_note</l><block s="reportSum"><block var="e_note"/><block s="reportQuotient"><block var="e_note"/><l>2</l></block></block></block><block s="doSetVar"><l>s_note</l><block s="reportQuotient"><block var="e_note"/><l>2</l></block></block><block s="doSetVar"><l>sd_note</l><block s="reportSum"><block var="s_note"/><block s="reportQuotient"><block var="s_note"/><l>2</l></block></block></block><block s="doSetVar"><l>h_note</l><block s="reportProduct"><block var="q_note"/><l>2</l></block></block><block s="doSetVar"><l>hd_note</l><block s="reportSum"><block var="h_note"/><block s="reportQuotient"><block var="h_note"/><l>2</l></block></block></block><block s="doSetVar"><l>w_note</l><block s="reportProduct"><block var="h_note"/><l>2</l></block></block><block s="doSetVar"><l>duration_times</l><block s="reportNewList"><list><block var="q_note"/><block var="qd_note"/><block var="e_note"/><block var="ed_note"/><block var="s_note"/><block var="sd_note"/><block var="h_note"/><block var="hd_note"/><block var="w_note"/></list></block></block><block s="doSetVar"><l>output_freq</l><block s="reportNewList"><list><l></l></list></block></block><custom-block s="for %upvar = %n to %n %cs"><l>i</l><l>0</l><block s="reportListLength"><block var="tones_ls"/></block><script><custom-block s="for %upvar = %n to %n %cs"><l>j</l><l>0</l><block s="reportListLength"><block var="notes_ls"/></block><script><block s="doIf"><block s="reportEquals"><block s="reportListItem"><block var="i"/><block var="tones_ls"/></block><block s="reportListItem"><block var="j"/><block var="notes_ls"/></block></block><script><block s="doAddToList"><block s="reportListItem"><block var="j"/><block var="notes_freq"/></block><block var="output_freq"/></block></script></block></script></custom-block></script></custom-block><block s="doSetVar"><l>output_time</l><block s="reportNewList"><list><l></l></list></block></block><custom-block s="for %upvar = %n to %n %cs"><l>i</l><l>0</l><block s="reportListLength"><block var="timing_ls"/></block><script><custom-block s="for %upvar = %n to %n %cs"><l>j</l><l>0</l><block s="reportListLength"><block var="duration_ls"/></block><script><block s="doIf"><block s="reportEquals"><block s="reportListItem"><block var="i"/><block var="timing_ls"/></block><block s="reportListItem"><block var="j"/><block var="duration_ls"/></block></block><script><block s="doAddToList"><block s="reportListItem"><block var="j"/><block var="duration_times"/></block><block var="output_time"/></block></script></block></script></custom-block></script></custom-block><custom-block s="for %upvar = %n to %n %cs"><l>i</l><l>0</l><block s="reportListLength"><block var="output_freq"/></block><script><custom-block s="tone on pin %n of frequency %n duration %n"><l>6</l><block s="reportListItem"><block var="i"/><block var="output_freq"/></block><block s="reportListItem"><block var="i"/><block var="output_time"/></block></custom-block></script></custom-block></script></block-definition><block-definition s="Turn LED: %&apos;on_off&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%b">true</input></inputs><script><block s="doIfElse"><block var="on_off"/><script><block s="digitalWrite"><l>12</l><l><bool>true</bool></l></block></script><script><block s="digitalWrite"><l>12</l><l><bool>false</bool></l></block></script></block></script></block-definition><block-definition s="RGB_LED Red: %&apos;red&apos; Green %&apos;green&apos; Blue: %&apos;Blue&apos; Brightness: %&apos;bright&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n">0</input><input type="%n">0</input><input type="%n">0</input><input type="%n">50</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>red</l><l>green</l><l>blue</l><l>bright</l></list><l>var array = [0xF0, 0x0A];&#xD;array.push(red);&#xD;array.push(green);&#xD;array.push(blue);&#xD;array.push(bright);&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));&#xD;                                 &#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;</l></block><list><block var="red"/><block var="green"/><block var="Blue"/><block var="bright"/></list></block></script></block-definition><block-definition s="Motion Detected" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportDigitalReading"><l>5</l></block></block></script></block-definition><block-definition s="LED Matrix Clear" type="command" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>array = [0xF0, 0x0C, 0x04, 0xF7];&#xD;this.arduino.board.sp.write(new Buffer(array));&#xD;&#xD;</l></block><list></list></block></script></block-definition><block-definition s="LED Matrix ShiftLeft %&apos;positions&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>positions</l></list><l>array = [0xF0, 0x0C, 0x00];&#xD;array.push(positions);&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));&#xD;&#xD;</l></block><list><block var="positions"/></list></block></script></block-definition><block-definition s="LED Matrix ShiftRight %&apos;positions&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>positions</l></list><l>array = [0xF0, 0x0C, 0x01];&#xD;array.push(positions);&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));&#xD;&#xD;</l></block><list><block var="positions"/></list></block></script></block-definition><block-definition s="LED Matrix ShowText %&apos;ShowText&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>var array = [0xF0, 0x0C, 0x03];&#xD;&#xD;for (i=0; i&lt;text.length; i++)&#xD;{&#xD;    array.push(text.charCodeAt(i));&#xD;}                                                              &#xD;&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer (array) );&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;</l></block><list><block var="ShowText"/></list></block></script></block-definition></blocks>